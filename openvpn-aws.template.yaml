---
AWSTemplateFormatVersion: "2010-09-09"
Description: OpenVPN server (Own VPC)

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "AWS Configuration"
        Parameters:
          - InstanceType
          - KeyName
          - HostedZoneName
      - Label:
          default: "OpenVPN Configuration"
        Parameters:
          - AdminUser
          - AdminPassword
          - RouteAllTraffic
          - UseVPNDNS

Parameters:
  InstanceType:
    Description: OpenVPN Instance Type
    Type: String
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
    Default: t2.medium

  KeyName:
    Description: 'SSH Key Name'
    Type: AWS::EC2::KeyPair::KeyName

  HostedZoneName:
    Description: '[Optional] Create a record like "openvpn.eu-west-1." for your Hosted Zone'
    Type: String
    MinLength: 4
    MaxLength: 255

  AdminUser:
    Description: OpenVPN Admin User
    Type: String
    MinLength: 4
    MaxLength: 32
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter, be at least 4 chars long and only alphanumeric
    Default: openvpn

  AdminPassword:
    Description: OpenVPN Admin Password
    Type: String
    NoEcho: true
    MinLength: 8
    MaxLength: 32
    ConstraintDescription: Must be at least 8 chars long

  RouteAllTraffic:
    Description: Should all local traffic go over VPN when connected?
    Type: Number
    AllowedValues:
      - 0
      - 1
    Default: 1

  UseVPNDNS:
    Description: Should client use VPN supplied DNS when connected?
    Type: Number
    AllowedValues:
      - 0
      - 1
    Default: 1

Conditions:
  HasHostedZone: !Not [ !Equals [ !Ref HostedZoneName, "" ]]

Mappings:
  AWSRegionArch2AMI:
    # Software Version:
    # OpenVPN Access Server 2.6.1-fe8020db-5343-4c43-9e65-5ed4a825c931-ami-0f5d312e085235ed4.4
    ap-south-1:
      HVM64: ami-0be23bab5e416bce2
    eu-west-3:
      HVM64: ami-088080980c023d570
    eu-west-2:
      HVM64: ami-0bb84df8b7f1eea55
    eu-west-1:
      HVM64: ami-05122e65346f7f721
    ap-northeast-2:
      HVM64: ami-00ca207ae32c3c9a2
    ap-northeast-1:
      HVM64: ami-0481fb75c293f82a8
    sa-east-1:
      HVM64: ami-08bf1c756f487f26a
    ca-central-1:
      HVM64: ami-043fe8b5b3cb5b48b
    ap-southeast-1:
      HVM64: ami-03e2781e8f0ee0d66
    ap-southeast-2:
      HVM64: ami-05fdd828e5a7530b0
    eu-central-1:
      HVM64: ami-01c85eb1cfa9321e3
    us-east-1:
      HVM64: ami-07a8d85046c8ecc99
    us-east-2:
      HVM64: ami-04f63e8f7a845159a
    us-west-1:
      HVM64: ami-0a5aef046a3a6e7bf
    us-west-2:
      HVM64: ami-0abbb3ceae54aa9fa

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "10.0.0.0/16"
      Tags:
      - Key: Name
        Value: OpenVPN

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "10.0.0.0/24"
      Tags:
      - Key: Name
        Value: OpenVPN Public Subnet

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  Route:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  IPAddress:
    Type: AWS::EC2::EIP
    Properties:
      Domain: "vpc"

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security group for OpenVPN Server
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: "0.0.0.0/0"
      - IpProtocol: tcp
        FromPort: 943
        ToPort: 943
        CidrIp: "0.0.0.0/0"
      - IpProtocol: udp
        FromPort: 1194
        ToPort: 1194
        CidrIp: "0.0.0.0/0"

  OpenVPNInstance:
    Type: AWS::EC2::Instance
    DependsOn: IPAddress
    Properties:
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - HVM64
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds:
      - !Ref SecurityGroup
      SubnetId: !Ref PublicSubnet
      Tags:
       - Key: Name
         Value: OpenVPN Instance
      UserData:
        Fn::Base64: !Sub |
          public_hostname=${IPAddress}
          admin_user=${AdminUser}
          admin_pw=${AdminPassword}
          reroute_gw=${RouteAllTraffic}
          reroute_dns=${UseVPNDNS}

  IPAssociaton:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt IPAddress.AllocationId
      InstanceId: !Ref OpenVPNInstance

  DNSRecord:
    Type: AWS::Route53::RecordSet
    Condition: HasHostedZone
    Properties:
      HostedZoneName: !Ref 'HostedZoneName'
      Comment: Friendly DNS name for OpenVPN server
      Name: !Join ['', ['openvpn', ., !Ref 'AWS::Region', ., !Ref 'HostedZoneName']]
      Type: A
      TTL: '900'
      ResourceRecords:
      - !Ref IPAddress

Outputs:
  OpenVPNServerAdminURL:
    Description: OpenVPN Administration URL
    Value: !Sub https://${IPAddress}:943/admin
  OpenVPNServerURL:
    Description: OpenVPN Server URL
    Value: !Sub https://${IPAddress}
